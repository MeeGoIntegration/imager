Requirements
------------

Imager can be deployed as a single combined "appliance" or in a
distributed, multi worker fashion.  The UI part can be deployed to a
small machine or VM, while each worker that does the actual image
building needs at least 1Gb of RAM and 8GB of disk space.

An already existing BOSS installation is expected to be accesible. For
instructions on deploying BOSS refer to: http://wiki.meego.com/Release_Infrastructure/BOSS/Installation

The installation of the UI includes a web server and a mysql server for django.

Workers will leave images in a pre-configured directory. To provide
access to these images this directory must *either* be shared via
NFS/CIFS between each worker and an NFS/webserver (the webui machine
is usually a convenient place for this) *or* each worker must have a
webserver installed.

Debian Squeeze
--------------

Add the correct repository ::

 cat >> /etc/apt/sources.list.d/mint_testing.list << EOF
 deb http://repo.pub.meego.com/Project:/MINT:/Testing/Debian_6.0/ /
 EOF
 apt-get update

UI only ::
  
 apt-get install img-web

Worker only machines ::

 apt-get install img-worker

.. note::
   If you are going to serve the built images directly from the workers install
   an HTTP server as well. Refer to worker configuration for more details

Kickstart process machine ::

  apt-get install img-ks

UI + Worker ::

 apt-get install img-web img-worker img-ks

OpenSUSE
--------

Add the correct repository ::

 zypper ar http://repo.pub.meego.com/Project:/MINT:/Testing/openSUSE_11.4/Project:MINT:Testing.repo
 zypper ar http://download.meego.com/live/devel:/tools:/building/openSUSE_11.4/
 zypper ar http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_11.4/
 zypper --no-gpg-checks --gpg-auto-import-keys ref

UI only ::

 zypper --non-interactive in img-web 

Worker only ::

 zypper --non-interactive in img-ks img-worker

.. note::
   If you are going to serve the built images directly from the workers install
   an HTTP server as well. Refer to worker configuration for more details

UI + Worker ::

 zypper --non-interactive in img-web img-ks img-worker

General
-------

IMG uses BOSS and SkyNET to control the building process; this lets
manual (ie webui triggered) and automated builds (ie BOSS process
driven) co-exist if needed.

There are 3 different participants used by both processes:

* build_ks : This participant modifies the baseline ks that must be
  provided (part of img-ks package). This should be installed on the
  kickstart process machine. Since mic2 is needed this is usually one
  of the worker machines.

* request_image : This should really be called 'register_build_in_webui'
  (part of the img-web package).

* update_image_status is 'private' to the web ui and is provided in
  the img-web package.

* build_image : Runs mic2 to creates the actual image - this can take
  a few minutes to finish. (part of img-worker package)

Each of these participants should be configured, registered and enabled.

*** The configuration is quite complex and should be studied carefully. ***

Once configured the participants can be started:

UI machine ::

  skynet enable request_image
  skynet enable update_image_status
  skynet register request_image
  skynet register update_image_status

Kickstart machine ::

  skynet enable build_ks
  skynet register build_ks

Each worker machine ::

  skynet enable build_image
  # Only really needs to be done once
  skynet register build_image

