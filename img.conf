[web]
url_prefix=img
; communication method can be amqp or boss
use_boss = no
use_ldap = no
ldap_server = ldaps://127.0.0.1 
ldap_dn_template = uid=%(user)s,ou=example,dc=com
ldap_mail_attr = mail
ldap_fname_attr = givenName
ldap_lname_attr = sn
ldap_mail_attr = mail
devicegroup = devicegroup:mygroup
db_engine = sqlite3
db_name = /var/lib/img/img.db
db_user =
db_pass =

[worker]
base_url = images/
base_dir = /var/www/build/images
templates_dir = /etc/imager/templates/
num_workers = 2
post_creation = /bin/echo
use_kvm = no
; Example, mic_opts = --save-kernel, --use_comps, so comma separated options
mic_opts = --save-kernel
reposerver = /
mic_cache_dir = /srv/www/build/cache
img_home = /usr/share/img
img_tmp = /tmp/
id_rsa = /usr/share/img/id_rsa
base_img = /usr/share/img/base.img


[boss]
amqp_host = 127.0.0.1
amqp_user = boss 
amqp_pwd = boss
amqp_vhost = boss


[amqp]
amqp_host = 127.0.0.1
amqp_user = img
amqp_pwd = imgpwd
amqp_vhost = imgvhost

[build_image]
daemon = Yes
logfile = /var/log/build_image
pidfile = /var/run/build_image
runas_user = root
runas_group = root

[build_ks]
daemon = Yes 
logfile = /var/log/build_ks.log
runas_user = nobody
runas_group = nogroup
ksfile = /srv/BOSS/ks/meego-core.ks
reposerver = http://download.meego.com

